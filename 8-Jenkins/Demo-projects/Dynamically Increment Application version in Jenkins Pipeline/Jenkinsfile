#!/usr/bin/env groovy
pipeline {
    agent any
    tools {
        maven 'maven'
    }

    stages {
        stage('Increment version') {
            steps {
                script {
                 dir("Maven") {
                    'sh mvn build-helper:parse-version version:set \
                     -DnewVersion=\\\${parsedVersion.majorVersion}.\\\${parsedVersion.minorVersion}.\\\${parsedVersion.nextIncrementalVersion} versions:commit'

                    def matcher = readFile('pom.xml') =~ '<version>(.+)</version>'
                    def version = matcher[0][1]
                    env.IMAGE_NAME = "$version-$BUILD_NUMBER"
                    echo "IMAGE_NAME: ${env.IMAGE_NAME}"

                    }
                }
            }
        }
        stage('Build the app') {
            steps {
                script {
                     dir("Maven") {
                        echo 'Building the app'
                        sh 'mvn clean package'
                    }
                }
            }
        }
        stage('Docker build and push') {
            steps {
              script {
                 dir("Maven") {
                    withCredentials([usernamePassword(credentialsId: 'docker-credentials', usernameVariable: 'USER', passwordVariable: 'PASS')]){
                         sh "docker build -t rodybothe2/mvn:${IMAGE_NAME} ."
                         sh 'echo $PASS | docker login -u $USER --password-stdin'
                         sh "docker push rodybothe2/mvn:${IMAGE_NAME}"
                       }
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'gitlab-credentials', passwordVariable: 'PASS')])
                    sh 'git config --global user.email "jenkins@example.com"'
                    sh 'git config --global user.name "jenkins"'

                    sh 'git status'
                    sh 'git branch'
                    sh 'git config --list'

                    sh "git remote set-url origin https://${USER}:${PASS}@gitlab.com/rodybothe2/jenkins-bootcamp"
                    sh 'git add .'
                    sh 'git commit -m "ci: version bump"'
                    sh 'git push origin HEAD:jenkins-jobs'
                }
            }
        }
    }
}
