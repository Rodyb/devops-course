#!/usr/bin/env groovy

pipeline {
    agent any
    stages {
      stage('increment version') {
        steps {
            script {
                dir("app") {
                    sh "npm version minor"
                    def packageJson = readJSON file: 'package.json'
                    def getVersion = packageJson.version
                    env.IMAGE_NAME = "$getVersion-$BUILD_NUMBER"
                 }
            }
        }
     }
        stage('Docker build and push') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-credentials', usernameVariable: 'USER', passwordVariable: 'PASS')]){
                     sh "docker build -t rodybothe2/node:${IMAGE_NAME} ."
                     sh 'echo $PASS | docker login -u $USER --password-stdin'
                     sh "docker push rodybothe2/node:${IMAGE_NAME}"
                }
            }
        }
//        stage('Deploy to EC2') {
//            steps {
//                script {
//                    def dockerCmd = 'docker run -p 3080:3080 -d rodybothe2/node-js-aws:latest'
//                    sshagent(['ec2-user']) {
//                        sh "ssh -tt -o StrictHostKeyChecking=no ec2-user@3.121.174.25 ${dockerCmd}"
//                    }
//                }
//            }
//    stage('Run docker image') {
//        steps {
//            script {
//                def dockerCmd = 'docker run -p 3080:3080 -d rodybothe2/node-js-aws:latest'
//                sshagent(['ec2-user']) {
//                    sh "ssh -tt -o StrictHostKeyChecking=no ec2-user@3.121.174.25 ${dockerCmd}"
//                }
//            }
//        }
        }
    }
//}

